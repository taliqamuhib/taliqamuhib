{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/taliqamuhib/taliqamuhib/blob/main/kidney%20stone%20classification%20using%20vision%20transformers\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "48530309",
      "metadata": {
        "id": "48530309",
        "outputId": "2e32483a-a7fc-4cb6-df12-748172ad4fa2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: tensorflow-addons in c:\\users\\ai.1\\anaconda3\\envs\\myenv\\lib\\site-packages (0.17.1)\n",
            "Requirement already satisfied: typeguard>=2.7 in c:\\users\\ai.1\\anaconda3\\envs\\myenv\\lib\\site-packages (from tensorflow-addons) (2.13.3)\n",
            "Requirement already satisfied: packaging in c:\\users\\ai.1\\anaconda3\\envs\\myenv\\lib\\site-packages (from tensorflow-addons) (21.3)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in c:\\users\\ai.1\\anaconda3\\envs\\myenv\\lib\\site-packages (from packaging->tensorflow-addons) (3.0.4)\n"
          ]
        }
      ],
      "source": [
        "!pip install -U tensorflow-addons\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2409ecb5",
      "metadata": {
        "id": "2409ecb5",
        "outputId": "2806ac19-6f56-46b9-b5af-99f078a8919c"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "C:\\Users\\AI.1\\anaconda3\\envs\\myenv\\lib\\site-packages\\tensorflow_addons\\utils\\ensure_tf_install.py:53: UserWarning: Tensorflow Addons supports using Python ops for all Tensorflow versions above or equal to 2.7.0 and strictly below 2.10.0 (nightly versions are not supported). \n",
            " The versions of TensorFlow you are currently using is 2.6.0 and is not supported. \n",
            "Some things might work, some things might not.\n",
            "If you were to encounter a bug, do not file an issue.\n",
            "If you want to make sure you're using a tested and supported configuration, either change the TensorFlow version or the TensorFlow Addons's version. \n",
            "You can find the compatibility matrix in TensorFlow Addon's readme:\n",
            "https://github.com/tensorflow/addons\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "from sklearn.model_selection import train_test_split\n",
        "from tensorflow import keras\n",
        "from tensorflow.keras import layers\n",
        "import tensorflow_addons as tfa\n",
        "import os\n",
        "from tensorflow.keras.preprocessing.image import load_img\n",
        "#from tensorflow.keras.applications import MobileNetV2\n",
        "from tensorflow.keras.layers import AveragePooling2D\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.layers import Dropout\n",
        "from tensorflow.keras.layers import Flatten\n",
        "from tensorflow.keras.layers import Dense\n",
        "from tensorflow.keras.layers import Input\n",
        "from tensorflow.keras.models import Model\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "from tensorflow.keras.applications.mobilenet_v2 import preprocess_input\n",
        "from tensorflow.keras.preprocessing.image import img_to_array\n",
        "from tensorflow.keras.preprocessing.image import load_img\n",
        "from tensorflow.keras.utils import to_categorical\n",
        "from sklearn.preprocessing import LabelBinarizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import classification_report\n",
        "import numpy as np \n",
        "import scipy.interpolate\n",
        "import re\n",
        "import matplotlib.pyplot as plt\n",
        "import os\n",
        "\n",
        "from imutils import paths\n",
        "from PIL import ImageFile\n",
        "import pandas as pd \n",
        "ImageFile.LOAD_TRUNCATED_IMAGES = True"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1ea0d8cb",
      "metadata": {
        "id": "1ea0d8cb"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "\n",
        "import numpy as np \n",
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt\n",
        "import os"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bf44c0c4",
      "metadata": {
        "id": "bf44c0c4"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "os.environ['CUDA_DEVICE_ORDER'] = \"PCI_BUS_ID\"\n",
        "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c4f7e6cf",
      "metadata": {
        "id": "c4f7e6cf"
      },
      "outputs": [],
      "source": [
        "# initialize the initial learning rate, number of epochs to train for,\n",
        "# and batch size\n",
        "num_classes = 2\n",
        "input_shape = (224, 224, 3)\n",
        "\n",
        "df = r\"E:/israr/Taliqa/dataset/\"\n",
        "CATEGORIES =  [\"Normal\", \"STONE\"]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0a96b029",
      "metadata": {
        "id": "0a96b029",
        "outputId": "78ef0538-bb7f-4c35-88fa-453c0c4f78b7"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Normal', 'STONE']\n",
            "Types of classes labels found:  2\n"
          ]
        }
      ],
      "source": [
        "# num_classes = 2\n",
        "# input_shape = (224, 224, 3)\n",
        "\n",
        "dataset_path = os.listdir('E:/israr/Taliqa/dataset/')\n",
        "\n",
        "\n",
        "print (dataset_path)  #what kinds of classes are in this dataset\n",
        "\n",
        "print(\"Types of classes labels found: \", len(dataset_path))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "967ec603",
      "metadata": {
        "id": "967ec603"
      },
      "outputs": [],
      "source": [
        "import pandas as pd \n",
        "class_labels = []\n",
        "\n",
        "for item in dataset_path:\n",
        " # Get all the file names\n",
        " all_classes = os.listdir('E:/israr/Taliqa/dataset//' + '/' +item)\n",
        " #print(all_classes)\n",
        "\n",
        "# Add them to the list\n",
        " for room in all_classes:\n",
        "    class_labels.append((item, str('dataset_path' + '/' +item) + '/' + room))\n",
        "    #print(class_labels[:5])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "12acd204",
      "metadata": {
        "id": "12acd204",
        "outputId": "54bb69de-ed2c-48bb-ce79-bff9d587ebda"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "   Labels                                   image\n",
            "0  Normal     dataset_path/Normal/Normal- (1).jpg\n",
            "1  Normal    dataset_path/Normal/Normal- (10).jpg\n",
            "2  Normal   dataset_path/Normal/Normal- (100).jpg\n",
            "3  Normal  dataset_path/Normal/Normal- (1000).jpg\n",
            "4  Normal  dataset_path/Normal/Normal- (1001).jpg\n",
            "     Labels                                image\n",
            "9279  STONE  dataset_path/STONE/STONE- (995).jpg\n",
            "9280  STONE  dataset_path/STONE/STONE- (996).jpg\n",
            "9281  STONE  dataset_path/STONE/STONE- (997).jpg\n",
            "9282  STONE  dataset_path/STONE/STONE- (998).jpg\n",
            "9283  STONE  dataset_path/STONE/STONE- (999).jpg\n"
          ]
        }
      ],
      "source": [
        "# # Build a dataframe        \n",
        "df = pd.DataFrame(data=class_labels, columns=['Labels', 'image'])\n",
        "print(df.head())\n",
        "print(df.tail())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "80e33d86",
      "metadata": {
        "id": "80e33d86",
        "outputId": "e15b84c8-857c-45d0-d153-bb8f0b194d77"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Total number of images in the dataset:  9284\n",
            "Normal    5905\n",
            "STONE     3379\n",
            "Name: Labels, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Let's check how many samples for each category are present\n",
        "print(\"Total number of images in the dataset: \", len(df))\n",
        "\n",
        "label_count = df['Labels'].value_counts()\n",
        "print(label_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e394ee3c",
      "metadata": {
        "id": "e394ee3c"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import cv2\n",
        "from PIL import Image\n",
        "path = 'E:/israr/Taliqa/dataset//'\n",
        "dataset_path = os.listdir('E:/israr/Taliqa/dataset/')\n",
        "\n",
        "im_size = 224\n",
        "images = []\n",
        "labels = []\n",
        "\n",
        "for i in dataset_path:\n",
        "    data_path = path + str(i)  \n",
        "    filenames = [i for i in os.listdir(data_path) ]\n",
        "   \n",
        "    for f in filenames:\n",
        "        img = cv2.imread(data_path + '/' + f)\n",
        "        img = cv2.resize(img, (im_size, im_size))\n",
        "        #patches = extract_patches_2d(img, patch_size(224, 224), max_patches = 10)\n",
        "        #img = np.array(img)\n",
        "        images.append(img)\n",
        "        labels.append(i)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0df7a4e7",
      "metadata": {
        "id": "0df7a4e7"
      },
      "outputs": [],
      "source": [
        "images = np.array(images)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1b0827a8",
      "metadata": {
        "id": "1b0827a8",
        "outputId": "768df411-fdf4-4f45-8962-e5151f6b3199"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "(9284, 224, 224, 3)\n"
          ]
        }
      ],
      "source": [
        "print(images.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "13dfee56",
      "metadata": {
        "id": "13dfee56",
        "outputId": "dddd4973-fa2b-4476-c7bf-c2f131204241"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Normal' 'Normal' 'Normal' ... 'STONE' 'STONE' 'STONE']\n",
            "[0 0 0 ... 1 1 1]\n"
          ]
        }
      ],
      "source": [
        "from sklearn.preprocessing import LabelEncoder , OneHotEncoder\n",
        "y=df['Labels'].values\n",
        "print(y)\n",
        "\n",
        "y_labelencoder = LabelEncoder ()\n",
        "y = y_labelencoder.fit_transform (y)\n",
        "print (y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "eb549a4e",
      "metadata": {
        "id": "eb549a4e",
        "outputId": "32d21bd4-8be2-4103-c379-f9b57fed4af8"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[1. 0.]\n",
            " [1. 0.]\n",
            " [1. 0.]\n",
            " [1. 0.]\n",
            " [1. 0.]]\n",
            "[[1. 0.]\n",
            " [1. 0.]\n",
            " [1. 0.]\n",
            " ...\n",
            " [0. 1.]\n",
            " [0. 1.]\n",
            " [0. 1.]]\n"
          ]
        }
      ],
      "source": [
        "y=y.reshape(-1,1)\n",
        "\n",
        "from sklearn.compose import ColumnTransformer\n",
        "ct = ColumnTransformer([('my_ohe', OneHotEncoder(), [0])], remainder='passthrough')\n",
        "Y = ct.fit_transform(y) #.toarray()\n",
        "print(Y[:5])\n",
        "print(Y[35:])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "83c39141",
      "metadata": {
        "id": "83c39141",
        "outputId": "9a94a1c0-5d56-44fb-854f-4c1293ee02de"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "9285"
            ]
          },
          "execution_count": 72,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "Y=(Y-1)\n",
        "len(Y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7d05526a",
      "metadata": {
        "id": "7d05526a"
      },
      "outputs": [],
      "source": [
        "from sklearn.utils import shuffle\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "\n",
        "images, Y = shuffle(images, Y, random_state=1)\n",
        "\n",
        "\n",
        "train_x, test_x, train_y, test_y = train_test_split(images, Y, test_size=0.2, random_state=42)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1223a407",
      "metadata": {
        "id": "1223a407",
        "outputId": "59302224-0dbe-47b2-c43f-2ea9bb17db77"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "x_train shape: (7427, 224, 224, 3) - y_train shape: (7427, 2)\n",
            "x_test shape: (1857, 224, 224, 3) - y_test shape: (1857, 2)\n"
          ]
        }
      ],
      "source": [
        "print(f\"x_train shape: {train_x.shape} - y_train shape: {train_y.shape}\")\n",
        "print(f\"x_test shape: {test_x.shape} - y_test shape: {test_y.shape}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "47a43762",
      "metadata": {
        "id": "47a43762"
      },
      "outputs": [],
      "source": [
        "BUFFER_SIZE = 224\n",
        "BATCH_SIZE = 256\n",
        "\n",
        "# AUGMENTATION\n",
        "IMAGE_SIZE = 224\n",
        "PATCH_SIZE = 64\n",
        "NUM_PATCHES = (IMAGE_SIZE // PATCH_SIZE) ** 2\n",
        "\n",
        "# OPTIMIZER\n",
        "LEARNING_RATE = 0.001\n",
        "WEIGHT_DECAY = 0.0001\n",
        "\n",
        "# TRAINING\n",
        "EPOCHS = 50\n",
        "\n",
        "# ARCHITECTURE\n",
        "LAYER_NORM_EPS = 1e-6\n",
        "TRANSFORMER_LAYERS = 8\n",
        "PROJECTION_DIM = 64\n",
        "NUM_HEADS = 4\n",
        "TRANSFORMER_UNITS = [\n",
        "    PROJECTION_DIM * 2,\n",
        "    PROJECTION_DIM,\n",
        "]\n",
        "MLP_HEAD_UNITS = [2048, 1024]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0332ff8d",
      "metadata": {
        "id": "0332ff8d"
      },
      "outputs": [],
      "source": [
        "from tensorflow import keras\n",
        "data_augmentation =keras.Sequential(\n",
        "    [\n",
        "        keras.layers.Normalization(),\n",
        "        keras.layers.Resizing(IMAGE_SIZE, IMAGE_SIZE),\n",
        "        keras.layers.RandomFlip(\"horizontal\"),\n",
        "        keras.layers.RandomRotation(factor=0.02),\n",
        "        keras.layers.RandomZoom(height_factor=0.2, width_factor=0.2),\n",
        "    ],\n",
        "    name=\"data_augmentation\",\n",
        ")\n",
        "# Compute the mean and the variance of the training data for normalization.\n",
        "data_augmentation.layers[0].adapt(train_x)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "80035f20",
      "metadata": {
        "id": "80035f20"
      },
      "source": [
        "# Implement Shifted Patch Tokenization"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "dcc2393c",
      "metadata": {
        "id": "dcc2393c"
      },
      "outputs": [],
      "source": [
        "class ShiftedPatchTokenization(keras.layers.Layer):\n",
        "    def __init__(\n",
        "        self,\n",
        "        image_size=IMAGE_SIZE,\n",
        "        patch_size=PATCH_SIZE,\n",
        "        num_patches=NUM_PATCHES,\n",
        "        projection_dim=PROJECTION_DIM,\n",
        "        vanilla=False,\n",
        "        **kwargs,\n",
        "    ):\n",
        "        super().__init__(**kwargs)\n",
        "        self.vanilla = vanilla  # Flag to swtich to vanilla patch extractor\n",
        "        self.image_size = image_size\n",
        "        self.patch_size = patch_size\n",
        "        self.half_patch = patch_size // 2\n",
        "        self.flatten_patches = keras.layers.Reshape((num_patches, -1))\n",
        "        self.projection = keras.layers.Dense(units=projection_dim)\n",
        "        self.layer_norm = keras.layers.LayerNormalization(epsilon=LAYER_NORM_EPS)\n",
        "\n",
        "    def crop_shift_pad(self, images, mode):\n",
        "        # Build the diagonally shifted images\n",
        "        if mode == \"left-up\":\n",
        "            crop_height = self.half_patch\n",
        "            crop_width = self.half_patch\n",
        "            shift_height = 0\n",
        "            shift_width = 0\n",
        "        elif mode == \"left-down\":\n",
        "            crop_height = 0\n",
        "            crop_width = self.half_patch\n",
        "            shift_height = self.half_patch\n",
        "            shift_width = 0\n",
        "        elif mode == \"right-up\":\n",
        "            crop_height = self.half_patch\n",
        "            crop_width = 0\n",
        "            shift_height = 0\n",
        "            shift_width = self.half_patch\n",
        "        else:\n",
        "            crop_height = 0\n",
        "            crop_width = 0\n",
        "            shift_height = self.half_patch\n",
        "            shift_width = self.half_patch\n",
        "\n",
        "        # Crop the shifted images and pad them\n",
        "        crop = tf.image.crop_to_bounding_box(\n",
        "            images,\n",
        "            offset_height=crop_height,\n",
        "            offset_width=crop_width,\n",
        "            target_height=self.image_size - self.half_patch,\n",
        "            target_width=self.image_size - self.half_patch,\n",
        "        )\n",
        "        shift_pad = tf.image.pad_to_bounding_box(\n",
        "            crop,\n",
        "            offset_height=shift_height,\n",
        "            offset_width=shift_width,\n",
        "            target_height=self.image_size,\n",
        "            target_width=self.image_size,\n",
        "        )\n",
        "        return shift_pad\n",
        "\n",
        "    def call(self, images):\n",
        "        if not self.vanilla:\n",
        "            # Concat the shifted images with the original image\n",
        "            images = tf.concat(\n",
        "                [\n",
        "                    images,\n",
        "                    self.crop_shift_pad(images, mode=\"left-up\"),\n",
        "                    self.crop_shift_pad(images, mode=\"left-down\"),\n",
        "                    self.crop_shift_pad(images, mode=\"right-up\"),\n",
        "                    self.crop_shift_pad(images, mode=\"right-down\"),\n",
        "                ],\n",
        "                axis=-1,\n",
        "            )\n",
        "        # Patchify the images and flatten it\n",
        "        patches = tf.image.extract_patches(\n",
        "            images=images,\n",
        "            sizes=[1, self.patch_size, self.patch_size, 1],\n",
        "            strides=[1, self.patch_size, self.patch_size, 1],\n",
        "            rates=[1, 1, 1, 1],\n",
        "            padding=\"VALID\",\n",
        "        )\n",
        "        flat_patches = self.flatten_patches(patches)\n",
        "        if not self.vanilla:\n",
        "            # Layer normalize the flat patches and linearly project it\n",
        "            tokens = self.layer_norm(flat_patches)\n",
        "            tokens = self.projection(tokens)\n",
        "        else:\n",
        "            # Linearly project the flat patches\n",
        "            tokens = self.projection(flat_patches)\n",
        "        return (tokens, patches)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4e8c2566",
      "metadata": {
        "id": "4e8c2566"
      },
      "source": [
        "# Visualize the patches"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8f1720c9",
      "metadata": {
        "id": "8f1720c9",
        "outputId": "3b0d8819-c894-4e12-f642-63e138ec2979"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "ORIGINAL\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "LEFT-UP\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "LEFT-DOWN\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "RIGHT-UP\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "RIGHT-DOWN\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x288 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Get a random image from the training dataset\n",
        "# and resize the image\n",
        "image = train_x[np.random.choice(range(train_x.shape[0]))]\n",
        "resized_image = tf.image.resize(\n",
        "    tf.convert_to_tensor([image]), size=(IMAGE_SIZE, IMAGE_SIZE)\n",
        ")\n",
        "\n",
        "# Vanilla patch maker: This takes an image and divides into\n",
        "# patches as in the original ViT paper\n",
        "(token, patch) = ShiftedPatchTokenization(vanilla=True)(resized_image / 255.0)\n",
        "(token, patch) = (token[0], patch[0])\n",
        "n = patch.shape[0]\n",
        "count = 1\n",
        "plt.figure(figsize=(4, 4))\n",
        "for row in range(n):\n",
        "    for col in range(n):\n",
        "        plt.subplot(n, n, count)\n",
        "        count = count + 1\n",
        "        image = tf.reshape(patch[row][col], (PATCH_SIZE, PATCH_SIZE, 3))\n",
        "        plt.imshow(image)\n",
        "        plt.axis(\"off\")\n",
        "plt.show()\n",
        "\n",
        "# Shifted Patch Tokenization: This layer takes the image, shifts it\n",
        "# diagonally and then extracts patches from the concatinated images\n",
        "(token, patch) = ShiftedPatchTokenization(vanilla=False)(resized_image / 255.0)\n",
        "(token, patch) = (token[0], patch[0])\n",
        "n = patch.shape[0]\n",
        "shifted_images = [\"ORIGINAL\", \"LEFT-UP\", \"LEFT-DOWN\", \"RIGHT-UP\", \"RIGHT-DOWN\"]\n",
        "for index, name in enumerate(shifted_images):\n",
        "    print(name)\n",
        "    count = 1\n",
        "    plt.figure(figsize=(4, 4))\n",
        "    for row in range(n):\n",
        "        for col in range(n):\n",
        "            plt.subplot(n, n, count)\n",
        "            count = count + 1\n",
        "            image = tf.reshape(patch[row][col], (PATCH_SIZE, PATCH_SIZE, 5 * 3))\n",
        "            plt.imshow(image[..., 3 * index : 3 * index + 3])\n",
        "            plt.axis(\"off\")\n",
        "    plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "119bf360",
      "metadata": {
        "id": "119bf360"
      },
      "source": [
        "# Implement the patch encoding layer"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "10d0f48d",
      "metadata": {
        "id": "10d0f48d"
      },
      "outputs": [],
      "source": [
        "class PatchEncoder(layers.Layer):\n",
        "    def __init__(\n",
        "        self, num_patches=NUM_PATCHES, projection_dim=PROJECTION_DIM, **kwargs\n",
        "    ):\n",
        "        super().__init__(**kwargs)\n",
        "        self.num_patches = num_patches\n",
        "        self.position_embedding = layers.Embedding(\n",
        "            input_dim=num_patches, output_dim=projection_dim\n",
        "        )\n",
        "        self.positions = tf.range(start=0, limit=self.num_patches, delta=1)\n",
        "\n",
        "    def call(self, encoded_patches):\n",
        "        encoded_positions = self.position_embedding(self.positions)\n",
        "        encoded_patches = encoded_patches + encoded_positions\n",
        "        return encoded_patches"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "eea8284f",
      "metadata": {
        "id": "eea8284f"
      },
      "source": [
        "# Implement Locality Self Attention"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "89ccd806",
      "metadata": {
        "id": "89ccd806"
      },
      "outputs": [],
      "source": [
        "class MultiHeadAttentionLSA(tf.keras.layers.MultiHeadAttention):\n",
        "    def __init__(self, **kwargs):\n",
        "        super().__init__(**kwargs)\n",
        "        # The trainable temperature term. The initial value is\n",
        "        # the square root of the key dimension.\n",
        "        self.tau = tf.Variable(math.sqrt(float(self._key_dim)), trainable=True)\n",
        "\n",
        "    def _compute_attention(self, query, key, value, attention_mask=None, training=None):\n",
        "        query = tf.multiply(query, 1.0 / self.tau)\n",
        "        attention_scores = tf.einsum(self._dot_product_equation, key, query)\n",
        "        attention_scores = self._masked_softmax(attention_scores, attention_mask)\n",
        "        attention_scores_dropout = self._dropout_layer(\n",
        "            attention_scores, training=training\n",
        "        )\n",
        "        attention_output = tf.einsum(\n",
        "            self._combine_equation, attention_scores_dropout, value\n",
        "        )\n",
        "        return attention_output, attention_scores"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ff30bbb9",
      "metadata": {
        "id": "ff30bbb9"
      },
      "outputs": [],
      "source": [
        "def mlp(x, hidden_units, dropout_rate):\n",
        "    for units in hidden_units:\n",
        "        x = layers.Dense(units, activation=tf.nn.gelu)(x)\n",
        "        x = layers.Dropout(dropout_rate)(x)\n",
        "    return x\n",
        "\n",
        "# Build the diagonal attention mask\n",
        "diag_attn_mask = 1 - tf.eye(NUM_PATCHES)\n",
        "diag_attn_mask = tf.cast([diag_attn_mask], dtype=tf.int8)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5a0f3d1d",
      "metadata": {
        "id": "5a0f3d1d"
      },
      "source": [
        "# Build the ViT"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6229a350",
      "metadata": {
        "id": "6229a350"
      },
      "outputs": [],
      "source": [
        "INPUT_SHAPE = (224, 224, 3)\n",
        "NUM_CLASSES = 2\n",
        "def create_vit_classifier(vanilla=False):\n",
        "    inputs = layers.Input(shape=INPUT_SHAPE)\n",
        "    # Augment data.\n",
        "    augmented = data_augmentation(inputs)\n",
        "    # Create patches.\n",
        "    (tokens, _) = ShiftedPatchTokenization(vanilla=vanilla)(augmented)\n",
        "    # Encode patches.\n",
        "    encoded_patches = PatchEncoder()(tokens)\n",
        "\n",
        "    # Create multiple layers of the Transformer block.\n",
        "    for _ in range(TRANSFORMER_LAYERS):\n",
        "        # Layer normalization 1.\n",
        "        x1 = layers.LayerNormalization(epsilon=1e-6)(encoded_patches)\n",
        "        # Create a multi-head attention layer.\n",
        "        if not vanilla:\n",
        "            attention_output = MultiHeadAttentionLSA(\n",
        "                num_heads=NUM_HEADS, key_dim=PROJECTION_DIM, dropout=0.1\n",
        "            )(x1, x1, attention_mask=diag_attn_mask)\n",
        "        else:\n",
        "            attention_output = layers.MultiHeadAttention(\n",
        "                num_heads=NUM_HEADS, key_dim=PROJECTION_DIM, dropout=0.1\n",
        "            )(x1, x1)\n",
        "        # Skip connection 1.\n",
        "        x2 = layers.Add()([attention_output, encoded_patches])\n",
        "        # Layer normalization 2.\n",
        "        x3 = layers.LayerNormalization(epsilon=1e-6)(x2)\n",
        "        # MLP.\n",
        "        x3 = mlp(x3, hidden_units=TRANSFORMER_UNITS, dropout_rate=0.1)\n",
        "        # Skip connection 2.\n",
        "        encoded_patches = layers.Add()([x3, x2])\n",
        "\n",
        "    # Create a [batch_size, projection_dim] tensor.\n",
        "    representation = layers.LayerNormalization(epsilon=1e-6)(encoded_patches)\n",
        "    representation = layers.Flatten()(representation)\n",
        "    representation = layers.Dropout(0.5)(representation)\n",
        "    # Add MLP.\n",
        "    features = mlp(representation, hidden_units=MLP_HEAD_UNITS, dropout_rate=0.5)\n",
        "    # Classify outputs.\n",
        "    logits = layers.Dense(NUM_CLASSES)(features)\n",
        "    # Create the Keras model.\n",
        "    model = keras.Model(inputs=inputs, outputs=logits)\n",
        "    return model"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "009b4459",
      "metadata": {
        "id": "009b4459"
      },
      "source": [
        "# Compile, train, and evaluate the mode"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6923cdec",
      "metadata": {
        "scrolled": false,
        "id": "6923cdec",
        "outputId": "0cba37a3-f532-45d8-d5a2-83b9b61b35bb"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/300\n",
            "27/27 [==============================] - 38s 824ms/step - loss: 2.3247 - accuracy: 0.5757 - val_loss: 0.2291 - val_accuracy: 0.6891\n",
            "Epoch 2/300\n",
            "27/27 [==============================] - 19s 705ms/step - loss: 0.3020 - accuracy: 0.6459 - val_loss: 0.1864 - val_accuracy: 0.7550\n",
            "Epoch 3/300\n",
            "27/27 [==============================] - 20s 727ms/step - loss: 0.2621 - accuracy: 0.6683 - val_loss: 0.1763 - val_accuracy: 0.7779\n",
            "Epoch 4/300\n",
            "27/27 [==============================] - 19s 693ms/step - loss: 0.2427 - accuracy: 0.6840 - val_loss: 0.1582 - val_accuracy: 0.7927\n",
            "Epoch 5/300\n",
            "27/27 [==============================] - 19s 716ms/step - loss: 0.2316 - accuracy: 0.7015 - val_loss: 0.1671 - val_accuracy: 0.7793\n",
            "Epoch 6/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.2220 - accuracy: 0.7121 - val_loss: 0.1665 - val_accuracy: 0.7847\n",
            "Epoch 7/300\n",
            "27/27 [==============================] - 18s 684ms/step - loss: 0.2143 - accuracy: 0.7208 - val_loss: 0.1704 - val_accuracy: 0.7847\n",
            "Epoch 8/300\n",
            "27/27 [==============================] - 20s 728ms/step - loss: 0.2074 - accuracy: 0.7383 - val_loss: 0.1607 - val_accuracy: 0.8089\n",
            "Epoch 9/300\n",
            "27/27 [==============================] - 20s 723ms/step - loss: 0.1996 - accuracy: 0.7431 - val_loss: 0.1669 - val_accuracy: 0.8089\n",
            "Epoch 10/300\n",
            "27/27 [==============================] - 19s 710ms/step - loss: 0.1913 - accuracy: 0.7534 - val_loss: 0.1845 - val_accuracy: 0.8156\n",
            "Epoch 11/300\n",
            "27/27 [==============================] - 21s 769ms/step - loss: 0.1829 - accuracy: 0.7672 - val_loss: 0.1552 - val_accuracy: 0.8250\n",
            "Epoch 12/300\n",
            "27/27 [==============================] - 19s 721ms/step - loss: 0.1805 - accuracy: 0.7703 - val_loss: 0.1678 - val_accuracy: 0.8210\n",
            "Epoch 13/300\n",
            "27/27 [==============================] - 18s 677ms/step - loss: 0.1706 - accuracy: 0.7823 - val_loss: 0.1615 - val_accuracy: 0.8331\n",
            "Epoch 14/300\n",
            "27/27 [==============================] - 18s 672ms/step - loss: 0.1642 - accuracy: 0.7962 - val_loss: 0.1733 - val_accuracy: 0.8371\n",
            "Epoch 15/300\n",
            "27/27 [==============================] - 18s 676ms/step - loss: 0.1579 - accuracy: 0.8012 - val_loss: 0.1793 - val_accuracy: 0.8425\n",
            "Epoch 16/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.1537 - accuracy: 0.8067 - val_loss: 0.1660 - val_accuracy: 0.8587\n",
            "Epoch 17/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.1476 - accuracy: 0.8163 - val_loss: 0.1500 - val_accuracy: 0.8735\n",
            "Epoch 18/300\n",
            "27/27 [==============================] - 20s 749ms/step - loss: 0.1404 - accuracy: 0.8254 - val_loss: 0.1321 - val_accuracy: 0.8762\n",
            "Epoch 19/300\n",
            "27/27 [==============================] - 19s 706ms/step - loss: 0.1368 - accuracy: 0.8336 - val_loss: 0.1516 - val_accuracy: 0.8748\n",
            "Epoch 20/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.1283 - accuracy: 0.8402 - val_loss: 0.1300 - val_accuracy: 0.8802\n",
            "Epoch 21/300\n",
            "27/27 [==============================] - 19s 689ms/step - loss: 0.1263 - accuracy: 0.8420 - val_loss: 0.1218 - val_accuracy: 0.8816\n",
            "Epoch 22/300\n",
            "27/27 [==============================] - 19s 703ms/step - loss: 0.1199 - accuracy: 0.8505 - val_loss: 0.1191 - val_accuracy: 0.8883\n",
            "Epoch 23/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.1193 - accuracy: 0.8526 - val_loss: 0.1182 - val_accuracy: 0.8937\n",
            "Epoch 24/300\n",
            "27/27 [==============================] - 18s 678ms/step - loss: 0.1140 - accuracy: 0.8597 - val_loss: 0.1058 - val_accuracy: 0.9031\n",
            "Epoch 25/300\n",
            "27/27 [==============================] - 19s 705ms/step - loss: 0.1101 - accuracy: 0.8646 - val_loss: 0.1076 - val_accuracy: 0.9112\n",
            "Epoch 26/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.1081 - accuracy: 0.8655 - val_loss: 0.0969 - val_accuracy: 0.9112\n",
            "Epoch 27/300\n",
            "27/27 [==============================] - 19s 720ms/step - loss: 0.1016 - accuracy: 0.8734 - val_loss: 0.1059 - val_accuracy: 0.9166\n",
            "Epoch 28/300\n",
            "27/27 [==============================] - 20s 725ms/step - loss: 0.0985 - accuracy: 0.8755 - val_loss: 0.0997 - val_accuracy: 0.9152\n",
            "Epoch 29/300\n",
            "27/27 [==============================] - 19s 704ms/step - loss: 0.1024 - accuracy: 0.8737 - val_loss: 0.0886 - val_accuracy: 0.9219\n",
            "Epoch 30/300\n",
            "27/27 [==============================] - 19s 714ms/step - loss: 0.0962 - accuracy: 0.8826 - val_loss: 0.0919 - val_accuracy: 0.9300\n",
            "Epoch 31/300\n",
            "27/27 [==============================] - 20s 728ms/step - loss: 0.0924 - accuracy: 0.8890 - val_loss: 0.0936 - val_accuracy: 0.9219\n",
            "Epoch 32/300\n",
            "27/27 [==============================] - 21s 758ms/step - loss: 0.0933 - accuracy: 0.8836 - val_loss: 0.0993 - val_accuracy: 0.9314\n",
            "Epoch 33/300\n",
            "27/27 [==============================] - 20s 720ms/step - loss: 0.0880 - accuracy: 0.8909 - val_loss: 0.0901 - val_accuracy: 0.9287\n",
            "Epoch 34/300\n",
            "27/27 [==============================] - 20s 733ms/step - loss: 0.0863 - accuracy: 0.8917 - val_loss: 0.0877 - val_accuracy: 0.9287\n",
            "Epoch 35/300\n",
            "27/27 [==============================] - 19s 709ms/step - loss: 0.0891 - accuracy: 0.8924 - val_loss: 0.0794 - val_accuracy: 0.9260\n",
            "Epoch 36/300\n",
            "27/27 [==============================] - 19s 711ms/step - loss: 0.0843 - accuracy: 0.8953 - val_loss: 0.0925 - val_accuracy: 0.9327\n",
            "Epoch 37/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0813 - accuracy: 0.8978 - val_loss: 0.0871 - val_accuracy: 0.9300\n",
            "Epoch 38/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0806 - accuracy: 0.9007 - val_loss: 0.0848 - val_accuracy: 0.9327\n",
            "Epoch 39/300\n",
            "27/27 [==============================] - 19s 686ms/step - loss: 0.0786 - accuracy: 0.8999 - val_loss: 0.0764 - val_accuracy: 0.9327\n",
            "Epoch 40/300\n",
            "27/27 [==============================] - 19s 706ms/step - loss: 0.0789 - accuracy: 0.9020 - val_loss: 0.0799 - val_accuracy: 0.9354\n",
            "Epoch 41/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0776 - accuracy: 0.9028 - val_loss: 0.0683 - val_accuracy: 0.9327\n",
            "Epoch 42/300\n",
            "27/27 [==============================] - 20s 726ms/step - loss: 0.0747 - accuracy: 0.9044 - val_loss: 0.0845 - val_accuracy: 0.9327\n",
            "Epoch 43/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0741 - accuracy: 0.9054 - val_loss: 0.0751 - val_accuracy: 0.9327\n",
            "Epoch 44/300\n",
            "27/27 [==============================] - 19s 714ms/step - loss: 0.0724 - accuracy: 0.9087 - val_loss: 0.0727 - val_accuracy: 0.9341\n",
            "Epoch 45/300\n",
            "27/27 [==============================] - 18s 675ms/step - loss: 0.0672 - accuracy: 0.9162 - val_loss: 0.0700 - val_accuracy: 0.9354\n",
            "Epoch 46/300\n",
            "27/27 [==============================] - 18s 676ms/step - loss: 0.0659 - accuracy: 0.9165 - val_loss: 0.0737 - val_accuracy: 0.9381\n",
            "Epoch 47/300\n",
            "27/27 [==============================] - 18s 665ms/step - loss: 0.0686 - accuracy: 0.9149 - val_loss: 0.0666 - val_accuracy: 0.9381\n",
            "Epoch 48/300\n",
            "27/27 [==============================] - 18s 668ms/step - loss: 0.0668 - accuracy: 0.9149 - val_loss: 0.0713 - val_accuracy: 0.9341\n",
            "Epoch 49/300\n",
            "27/27 [==============================] - 18s 675ms/step - loss: 0.0668 - accuracy: 0.9147 - val_loss: 0.0702 - val_accuracy: 0.9435\n",
            "Epoch 50/300\n",
            "27/27 [==============================] - 19s 685ms/step - loss: 0.0678 - accuracy: 0.9153 - val_loss: 0.0592 - val_accuracy: 0.9381\n",
            "Epoch 51/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0661 - accuracy: 0.9170 - val_loss: 0.0656 - val_accuracy: 0.9435\n",
            "Epoch 52/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0658 - accuracy: 0.9135 - val_loss: 0.0629 - val_accuracy: 0.9421\n",
            "Epoch 53/300\n",
            "27/27 [==============================] - 19s 689ms/step - loss: 0.0660 - accuracy: 0.9149 - val_loss: 0.0662 - val_accuracy: 0.9502\n",
            "Epoch 54/300\n",
            "27/27 [==============================] - 19s 725ms/step - loss: 0.0625 - accuracy: 0.9243 - val_loss: 0.0636 - val_accuracy: 0.9502\n",
            "Epoch 55/300\n",
            "27/27 [==============================] - 19s 710ms/step - loss: 0.0632 - accuracy: 0.9185 - val_loss: 0.0635 - val_accuracy: 0.9515\n",
            "Epoch 56/300\n",
            "27/27 [==============================] - 19s 698ms/step - loss: 0.0634 - accuracy: 0.9164 - val_loss: 0.0691 - val_accuracy: 0.9435\n",
            "Epoch 57/300\n",
            "27/27 [==============================] - 18s 674ms/step - loss: 0.0613 - accuracy: 0.9225 - val_loss: 0.0573 - val_accuracy: 0.9462\n",
            "Epoch 58/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0614 - accuracy: 0.9186 - val_loss: 0.0598 - val_accuracy: 0.9381\n",
            "Epoch 59/300\n",
            "27/27 [==============================] - 18s 684ms/step - loss: 0.0609 - accuracy: 0.9218 - val_loss: 0.0610 - val_accuracy: 0.9475\n",
            "Epoch 60/300\n",
            "27/27 [==============================] - 18s 668ms/step - loss: 0.0605 - accuracy: 0.9200 - val_loss: 0.0563 - val_accuracy: 0.9475\n",
            "Epoch 61/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.0608 - accuracy: 0.9213 - val_loss: 0.0590 - val_accuracy: 0.9448\n",
            "Epoch 62/300\n",
            "27/27 [==============================] - 20s 727ms/step - loss: 0.0589 - accuracy: 0.9224 - val_loss: 0.0564 - val_accuracy: 0.9489\n",
            "Epoch 63/300\n",
            "27/27 [==============================] - 20s 727ms/step - loss: 0.0587 - accuracy: 0.9219 - val_loss: 0.0514 - val_accuracy: 0.9462\n",
            "Epoch 64/300\n",
            "27/27 [==============================] - 18s 666ms/step - loss: 0.0613 - accuracy: 0.9186 - val_loss: 0.0519 - val_accuracy: 0.9475\n",
            "Epoch 65/300\n",
            "27/27 [==============================] - 18s 679ms/step - loss: 0.0583 - accuracy: 0.9234 - val_loss: 0.0535 - val_accuracy: 0.9475\n",
            "Epoch 66/300\n",
            "27/27 [==============================] - 19s 722ms/step - loss: 0.0566 - accuracy: 0.9300 - val_loss: 0.0558 - val_accuracy: 0.9435\n",
            "Epoch 67/300\n",
            "27/27 [==============================] - 18s 679ms/step - loss: 0.0589 - accuracy: 0.9224 - val_loss: 0.0519 - val_accuracy: 0.9502\n",
            "Epoch 68/300\n",
            "27/27 [==============================] - 18s 674ms/step - loss: 0.0572 - accuracy: 0.9249 - val_loss: 0.0536 - val_accuracy: 0.9489\n",
            "Epoch 69/300\n",
            "27/27 [==============================] - 20s 732ms/step - loss: 0.0541 - accuracy: 0.9313 - val_loss: 0.0468 - val_accuracy: 0.9515\n",
            "Epoch 70/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.0538 - accuracy: 0.9271 - val_loss: 0.0505 - val_accuracy: 0.9462\n",
            "Epoch 71/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0545 - accuracy: 0.9301 - val_loss: 0.0470 - val_accuracy: 0.9515\n",
            "Epoch 72/300\n",
            "27/27 [==============================] - 19s 705ms/step - loss: 0.0538 - accuracy: 0.9291 - val_loss: 0.0483 - val_accuracy: 0.9448\n",
            "Epoch 73/300\n",
            "27/27 [==============================] - 19s 698ms/step - loss: 0.0555 - accuracy: 0.9283 - val_loss: 0.0502 - val_accuracy: 0.9515\n",
            "Epoch 74/300\n",
            "27/27 [==============================] - 18s 670ms/step - loss: 0.0562 - accuracy: 0.9268 - val_loss: 0.0490 - val_accuracy: 0.9489\n",
            "Epoch 75/300\n",
            "27/27 [==============================] - 18s 678ms/step - loss: 0.0569 - accuracy: 0.9267 - val_loss: 0.0516 - val_accuracy: 0.9489\n",
            "Epoch 76/300\n",
            "27/27 [==============================] - 18s 666ms/step - loss: 0.0556 - accuracy: 0.9270 - val_loss: 0.0436 - val_accuracy: 0.9515\n",
            "Epoch 77/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0536 - accuracy: 0.9289 - val_loss: 0.0446 - val_accuracy: 0.9475\n",
            "Epoch 78/300\n",
            "27/27 [==============================] - 18s 669ms/step - loss: 0.0508 - accuracy: 0.9349 - val_loss: 0.0422 - val_accuracy: 0.9462\n",
            "Epoch 79/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0510 - accuracy: 0.9348 - val_loss: 0.0429 - val_accuracy: 0.9489\n",
            "Epoch 80/300\n",
            "27/27 [==============================] - 19s 719ms/step - loss: 0.0561 - accuracy: 0.9276 - val_loss: 0.0422 - val_accuracy: 0.9515\n",
            "Epoch 81/300\n",
            "27/27 [==============================] - 18s 678ms/step - loss: 0.0526 - accuracy: 0.9324 - val_loss: 0.0443 - val_accuracy: 0.9502\n",
            "Epoch 82/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.0519 - accuracy: 0.9307 - val_loss: 0.0429 - val_accuracy: 0.9515\n",
            "Epoch 83/300\n",
            "27/27 [==============================] - 18s 670ms/step - loss: 0.0521 - accuracy: 0.9285 - val_loss: 0.0399 - val_accuracy: 0.9529\n",
            "Epoch 84/300\n",
            "27/27 [==============================] - 19s 707ms/step - loss: 0.0504 - accuracy: 0.9340 - val_loss: 0.0389 - val_accuracy: 0.9529\n",
            "Epoch 85/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0505 - accuracy: 0.9331 - val_loss: 0.0394 - val_accuracy: 0.9542\n",
            "Epoch 86/300\n",
            "27/27 [==============================] - 19s 695ms/step - loss: 0.0520 - accuracy: 0.9306 - val_loss: 0.0451 - val_accuracy: 0.9489\n",
            "Epoch 87/300\n",
            "27/27 [==============================] - 18s 648ms/step - loss: 0.0514 - accuracy: 0.9321 - val_loss: 0.0417 - val_accuracy: 0.9408\n",
            "Epoch 88/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0520 - accuracy: 0.9324 - val_loss: 0.0450 - val_accuracy: 0.9515\n",
            "Epoch 89/300\n",
            "27/27 [==============================] - 18s 679ms/step - loss: 0.0487 - accuracy: 0.9358 - val_loss: 0.0401 - val_accuracy: 0.9502\n",
            "Epoch 90/300\n",
            "27/27 [==============================] - 18s 662ms/step - loss: 0.0475 - accuracy: 0.9375 - val_loss: 0.0431 - val_accuracy: 0.9462\n",
            "Epoch 91/300\n",
            "27/27 [==============================] - 18s 685ms/step - loss: 0.0502 - accuracy: 0.9355 - val_loss: 0.0385 - val_accuracy: 0.9542\n",
            "Epoch 92/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0496 - accuracy: 0.9339 - val_loss: 0.0414 - val_accuracy: 0.9489\n",
            "Epoch 93/300\n",
            "27/27 [==============================] - 18s 664ms/step - loss: 0.0545 - accuracy: 0.9286 - val_loss: 0.0351 - val_accuracy: 0.9542\n",
            "Epoch 94/300\n",
            "27/27 [==============================] - 19s 703ms/step - loss: 0.0483 - accuracy: 0.9345 - val_loss: 0.0375 - val_accuracy: 0.9529\n",
            "Epoch 95/300\n",
            "27/27 [==============================] - 19s 712ms/step - loss: 0.0510 - accuracy: 0.9331 - val_loss: 0.0434 - val_accuracy: 0.9515\n",
            "Epoch 96/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0481 - accuracy: 0.9370 - val_loss: 0.0365 - val_accuracy: 0.9529\n",
            "Epoch 97/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0532 - accuracy: 0.9295 - val_loss: 0.0391 - val_accuracy: 0.9489\n",
            "Epoch 98/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0503 - accuracy: 0.9309 - val_loss: 0.0401 - val_accuracy: 0.9502\n",
            "Epoch 99/300\n",
            "27/27 [==============================] - 17s 644ms/step - loss: 0.0489 - accuracy: 0.9361 - val_loss: 0.0348 - val_accuracy: 0.9556\n",
            "Epoch 100/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0499 - accuracy: 0.9339 - val_loss: 0.0364 - val_accuracy: 0.9515\n",
            "Epoch 101/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0473 - accuracy: 0.9388 - val_loss: 0.0361 - val_accuracy: 0.9556\n",
            "Epoch 102/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0487 - accuracy: 0.9375 - val_loss: 0.0343 - val_accuracy: 0.9596\n",
            "Epoch 103/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0483 - accuracy: 0.9366 - val_loss: 0.0367 - val_accuracy: 0.9556\n",
            "Epoch 104/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0489 - accuracy: 0.9333 - val_loss: 0.0394 - val_accuracy: 0.9542\n",
            "Epoch 105/300\n",
            "27/27 [==============================] - 18s 666ms/step - loss: 0.0475 - accuracy: 0.9385 - val_loss: 0.0353 - val_accuracy: 0.9502\n",
            "Epoch 106/300\n",
            "27/27 [==============================] - 19s 716ms/step - loss: 0.0458 - accuracy: 0.9375 - val_loss: 0.0363 - val_accuracy: 0.9583\n",
            "Epoch 107/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0470 - accuracy: 0.9391 - val_loss: 0.0355 - val_accuracy: 0.9610\n",
            "Epoch 108/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0440 - accuracy: 0.9423 - val_loss: 0.0327 - val_accuracy: 0.9569\n",
            "Epoch 109/300\n",
            "27/27 [==============================] - 19s 706ms/step - loss: 0.0446 - accuracy: 0.9425 - val_loss: 0.0389 - val_accuracy: 0.9583\n",
            "Epoch 110/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0454 - accuracy: 0.9391 - val_loss: 0.0341 - val_accuracy: 0.9596\n",
            "Epoch 111/300\n",
            "27/27 [==============================] - 18s 684ms/step - loss: 0.0481 - accuracy: 0.9363 - val_loss: 0.0360 - val_accuracy: 0.9556\n",
            "Epoch 112/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0467 - accuracy: 0.9366 - val_loss: 0.0343 - val_accuracy: 0.9569\n",
            "Epoch 113/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0434 - accuracy: 0.9431 - val_loss: 0.0344 - val_accuracy: 0.9569\n",
            "Epoch 114/300\n",
            "27/27 [==============================] - 18s 677ms/step - loss: 0.0458 - accuracy: 0.9393 - val_loss: 0.0335 - val_accuracy: 0.9596\n",
            "Epoch 115/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0455 - accuracy: 0.9408 - val_loss: 0.0342 - val_accuracy: 0.9569\n",
            "Epoch 116/300\n",
            "27/27 [==============================] - 18s 678ms/step - loss: 0.0455 - accuracy: 0.9390 - val_loss: 0.0329 - val_accuracy: 0.9556\n",
            "Epoch 117/300\n",
            "27/27 [==============================] - 19s 683ms/step - loss: 0.0439 - accuracy: 0.9427 - val_loss: 0.0339 - val_accuracy: 0.9569\n",
            "Epoch 118/300\n",
            "27/27 [==============================] - 18s 682ms/step - loss: 0.0432 - accuracy: 0.9414 - val_loss: 0.0343 - val_accuracy: 0.9556\n",
            "Epoch 119/300\n",
            "27/27 [==============================] - 19s 699ms/step - loss: 0.0426 - accuracy: 0.9457 - val_loss: 0.0325 - val_accuracy: 0.9596\n",
            "Epoch 120/300\n",
            "27/27 [==============================] - 18s 668ms/step - loss: 0.0431 - accuracy: 0.9428 - val_loss: 0.0309 - val_accuracy: 0.9596\n",
            "Epoch 121/300\n",
            "27/27 [==============================] - 18s 671ms/step - loss: 0.0439 - accuracy: 0.9385 - val_loss: 0.0336 - val_accuracy: 0.9542\n",
            "Epoch 122/300\n",
            "27/27 [==============================] - 18s 660ms/step - loss: 0.0522 - accuracy: 0.9294 - val_loss: 0.0346 - val_accuracy: 0.9502\n",
            "Epoch 123/300\n",
            "27/27 [==============================] - 18s 676ms/step - loss: 0.0470 - accuracy: 0.9375 - val_loss: 0.0359 - val_accuracy: 0.9556\n",
            "Epoch 124/300\n",
            "27/27 [==============================] - 18s 680ms/step - loss: 0.0443 - accuracy: 0.9399 - val_loss: 0.0342 - val_accuracy: 0.9556\n",
            "Epoch 125/300\n",
            "27/27 [==============================] - 18s 659ms/step - loss: 0.0459 - accuracy: 0.9363 - val_loss: 0.0334 - val_accuracy: 0.9650\n",
            "Epoch 126/300\n",
            "27/27 [==============================] - 18s 657ms/step - loss: 0.0447 - accuracy: 0.9424 - val_loss: 0.0334 - val_accuracy: 0.9556\n",
            "Epoch 127/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0454 - accuracy: 0.9399 - val_loss: 0.0324 - val_accuracy: 0.9596\n",
            "Epoch 128/300\n",
            "27/27 [==============================] - 19s 675ms/step - loss: 0.0446 - accuracy: 0.9396 - val_loss: 0.0337 - val_accuracy: 0.9596\n",
            "Epoch 129/300\n",
            "27/27 [==============================] - 18s 674ms/step - loss: 0.0454 - accuracy: 0.9385 - val_loss: 0.0340 - val_accuracy: 0.9610\n",
            "Epoch 130/300\n",
            "27/27 [==============================] - 18s 659ms/step - loss: 0.0450 - accuracy: 0.9408 - val_loss: 0.0319 - val_accuracy: 0.9637\n",
            "Epoch 131/300\n",
            "27/27 [==============================] - 18s 657ms/step - loss: 0.0447 - accuracy: 0.9411 - val_loss: 0.0322 - val_accuracy: 0.9637\n",
            "Epoch 132/300\n",
            "27/27 [==============================] - 18s 667ms/step - loss: 0.0429 - accuracy: 0.9423 - val_loss: 0.0298 - val_accuracy: 0.9664\n",
            "Epoch 133/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0428 - accuracy: 0.9433 - val_loss: 0.0317 - val_accuracy: 0.9623\n",
            "Epoch 134/300\n",
            "27/27 [==============================] - 18s 681ms/step - loss: 0.0449 - accuracy: 0.9388 - val_loss: 0.0308 - val_accuracy: 0.9569\n",
            "Epoch 135/300\n",
            "27/27 [==============================] - 18s 675ms/step - loss: 0.0440 - accuracy: 0.9428 - val_loss: 0.0293 - val_accuracy: 0.9637\n",
            "Epoch 136/300\n",
            "27/27 [==============================] - 19s 706ms/step - loss: 0.0428 - accuracy: 0.9412 - val_loss: 0.0279 - val_accuracy: 0.9664\n",
            "Epoch 137/300\n",
            "27/27 [==============================] - 18s 682ms/step - loss: 0.0409 - accuracy: 0.9430 - val_loss: 0.0293 - val_accuracy: 0.9610\n",
            "Epoch 138/300\n",
            "27/27 [==============================] - 19s 689ms/step - loss: 0.0419 - accuracy: 0.9455 - val_loss: 0.0295 - val_accuracy: 0.9650\n",
            "Epoch 139/300\n",
            "27/27 [==============================] - 18s 676ms/step - loss: 0.0409 - accuracy: 0.9478 - val_loss: 0.0287 - val_accuracy: 0.9623\n",
            "Epoch 140/300\n",
            "27/27 [==============================] - 19s 699ms/step - loss: 0.0422 - accuracy: 0.9425 - val_loss: 0.0292 - val_accuracy: 0.9596\n",
            "Epoch 141/300\n",
            "27/27 [==============================] - 19s 719ms/step - loss: 0.0435 - accuracy: 0.9424 - val_loss: 0.0286 - val_accuracy: 0.9623\n",
            "Epoch 142/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0477 - accuracy: 0.9382 - val_loss: 0.0356 - val_accuracy: 0.9529\n",
            "Epoch 143/300\n",
            "27/27 [==============================] - 18s 681ms/step - loss: 0.0436 - accuracy: 0.9420 - val_loss: 0.0294 - val_accuracy: 0.9623\n",
            "Epoch 144/300\n",
            "27/27 [==============================] - 19s 715ms/step - loss: 0.0427 - accuracy: 0.9428 - val_loss: 0.0315 - val_accuracy: 0.9542\n",
            "Epoch 145/300\n",
            "27/27 [==============================] - 18s 673ms/step - loss: 0.0430 - accuracy: 0.9423 - val_loss: 0.0311 - val_accuracy: 0.9556\n",
            "Epoch 146/300\n",
            "27/27 [==============================] - 19s 698ms/step - loss: 0.0442 - accuracy: 0.9385 - val_loss: 0.0318 - val_accuracy: 0.9515\n",
            "Epoch 147/300\n",
            "27/27 [==============================] - 18s 677ms/step - loss: 0.0424 - accuracy: 0.9448 - val_loss: 0.0304 - val_accuracy: 0.9637\n",
            "Epoch 148/300\n",
            "27/27 [==============================] - 19s 684ms/step - loss: 0.0414 - accuracy: 0.9446 - val_loss: 0.0322 - val_accuracy: 0.9569\n",
            "Epoch 149/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0407 - accuracy: 0.9452 - val_loss: 0.0271 - val_accuracy: 0.9650\n",
            "Epoch 150/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0419 - accuracy: 0.9448 - val_loss: 0.0276 - val_accuracy: 0.9650\n",
            "Epoch 151/300\n",
            "27/27 [==============================] - 20s 744ms/step - loss: 0.0422 - accuracy: 0.9445 - val_loss: 0.0294 - val_accuracy: 0.9637\n",
            "Epoch 152/300\n",
            "27/27 [==============================] - 19s 700ms/step - loss: 0.0434 - accuracy: 0.9384 - val_loss: 0.0295 - val_accuracy: 0.9677\n",
            "Epoch 153/300\n",
            "27/27 [==============================] - 19s 704ms/step - loss: 0.0396 - accuracy: 0.9479 - val_loss: 0.0308 - val_accuracy: 0.9610\n",
            "Epoch 154/300\n",
            "27/27 [==============================] - 20s 729ms/step - loss: 0.0420 - accuracy: 0.9452 - val_loss: 0.0279 - val_accuracy: 0.9596\n",
            "Epoch 155/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0414 - accuracy: 0.9436 - val_loss: 0.0286 - val_accuracy: 0.9569\n",
            "Epoch 156/300\n",
            "27/27 [==============================] - 19s 720ms/step - loss: 0.0483 - accuracy: 0.9319 - val_loss: 0.0306 - val_accuracy: 0.9542\n",
            "Epoch 157/300\n",
            "27/27 [==============================] - 18s 667ms/step - loss: 0.0408 - accuracy: 0.9452 - val_loss: 0.0292 - val_accuracy: 0.9596\n",
            "Epoch 158/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0428 - accuracy: 0.9428 - val_loss: 0.0286 - val_accuracy: 0.9637\n",
            "Epoch 159/300\n",
            "27/27 [==============================] - 19s 720ms/step - loss: 0.0423 - accuracy: 0.9433 - val_loss: 0.0260 - val_accuracy: 0.9677\n",
            "Epoch 160/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0403 - accuracy: 0.9470 - val_loss: 0.0287 - val_accuracy: 0.9637\n",
            "Epoch 161/300\n",
            "27/27 [==============================] - 19s 711ms/step - loss: 0.0407 - accuracy: 0.9467 - val_loss: 0.0281 - val_accuracy: 0.9610\n",
            "Epoch 162/300\n",
            "27/27 [==============================] - 19s 691ms/step - loss: 0.0432 - accuracy: 0.9424 - val_loss: 0.0277 - val_accuracy: 0.9677\n",
            "Epoch 163/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0424 - accuracy: 0.9421 - val_loss: 0.0272 - val_accuracy: 0.9650\n",
            "Epoch 164/300\n",
            "27/27 [==============================] - 19s 686ms/step - loss: 0.0406 - accuracy: 0.9455 - val_loss: 0.0286 - val_accuracy: 0.9596\n",
            "Epoch 165/300\n",
            "27/27 [==============================] - 19s 705ms/step - loss: 0.0400 - accuracy: 0.9463 - val_loss: 0.0282 - val_accuracy: 0.9569\n",
            "Epoch 166/300\n",
            "27/27 [==============================] - 19s 691ms/step - loss: 0.0396 - accuracy: 0.9485 - val_loss: 0.0287 - val_accuracy: 0.9610\n",
            "Epoch 167/300\n",
            "27/27 [==============================] - 21s 784ms/step - loss: 0.0405 - accuracy: 0.9460 - val_loss: 0.0279 - val_accuracy: 0.9623\n",
            "Epoch 168/300\n",
            "27/27 [==============================] - 22s 801ms/step - loss: 0.0405 - accuracy: 0.9452 - val_loss: 0.0298 - val_accuracy: 0.9623\n",
            "Epoch 169/300\n",
            "27/27 [==============================] - 20s 748ms/step - loss: 0.0396 - accuracy: 0.9482 - val_loss: 0.0270 - val_accuracy: 0.9583\n",
            "Epoch 170/300\n",
            "27/27 [==============================] - 20s 726ms/step - loss: 0.0424 - accuracy: 0.9409 - val_loss: 0.0286 - val_accuracy: 0.9542\n",
            "Epoch 171/300\n",
            "27/27 [==============================] - 21s 764ms/step - loss: 0.0400 - accuracy: 0.9478 - val_loss: 0.0282 - val_accuracy: 0.9637\n",
            "Epoch 172/300\n",
            "27/27 [==============================] - 22s 815ms/step - loss: 0.0397 - accuracy: 0.9475 - val_loss: 0.0261 - val_accuracy: 0.9637\n",
            "Epoch 173/300\n",
            "27/27 [==============================] - 21s 792ms/step - loss: 0.0393 - accuracy: 0.9467 - val_loss: 0.0279 - val_accuracy: 0.9677\n",
            "Epoch 174/300\n",
            "27/27 [==============================] - 20s 729ms/step - loss: 0.0418 - accuracy: 0.9414 - val_loss: 0.0278 - val_accuracy: 0.9717\n",
            "Epoch 175/300\n",
            "27/27 [==============================] - 21s 761ms/step - loss: 0.0380 - accuracy: 0.9490 - val_loss: 0.0263 - val_accuracy: 0.9650\n",
            "Epoch 176/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.0386 - accuracy: 0.9496 - val_loss: 0.0272 - val_accuracy: 0.9650\n",
            "Epoch 177/300\n",
            "27/27 [==============================] - 21s 766ms/step - loss: 0.0421 - accuracy: 0.9466 - val_loss: 0.0269 - val_accuracy: 0.9623\n",
            "Epoch 178/300\n",
            "27/27 [==============================] - 21s 761ms/step - loss: 0.0400 - accuracy: 0.9443 - val_loss: 0.0265 - val_accuracy: 0.9610\n",
            "Epoch 179/300\n",
            "27/27 [==============================] - 21s 770ms/step - loss: 0.0386 - accuracy: 0.9469 - val_loss: 0.0268 - val_accuracy: 0.9717\n",
            "Epoch 180/300\n",
            "27/27 [==============================] - 21s 772ms/step - loss: 0.0372 - accuracy: 0.9506 - val_loss: 0.0256 - val_accuracy: 0.9704\n",
            "Epoch 181/300\n",
            "27/27 [==============================] - 20s 754ms/step - loss: 0.0384 - accuracy: 0.9500 - val_loss: 0.0272 - val_accuracy: 0.9664\n",
            "Epoch 182/300\n",
            "27/27 [==============================] - 21s 790ms/step - loss: 0.0382 - accuracy: 0.9514 - val_loss: 0.0304 - val_accuracy: 0.9529\n",
            "Epoch 183/300\n",
            "27/27 [==============================] - 20s 743ms/step - loss: 0.0393 - accuracy: 0.9464 - val_loss: 0.0257 - val_accuracy: 0.9637\n",
            "Epoch 184/300\n",
            "27/27 [==============================] - 21s 775ms/step - loss: 0.0386 - accuracy: 0.9472 - val_loss: 0.0266 - val_accuracy: 0.9610\n",
            "Epoch 185/300\n",
            "27/27 [==============================] - 20s 760ms/step - loss: 0.0393 - accuracy: 0.9452 - val_loss: 0.0272 - val_accuracy: 0.9610\n",
            "Epoch 186/300\n",
            "27/27 [==============================] - 21s 798ms/step - loss: 0.0409 - accuracy: 0.9439 - val_loss: 0.0263 - val_accuracy: 0.9623\n",
            "Epoch 187/300\n",
            "27/27 [==============================] - 21s 782ms/step - loss: 0.0416 - accuracy: 0.9440 - val_loss: 0.0318 - val_accuracy: 0.9542\n",
            "Epoch 188/300\n",
            "27/27 [==============================] - 21s 774ms/step - loss: 0.0406 - accuracy: 0.9473 - val_loss: 0.0282 - val_accuracy: 0.9596\n",
            "Epoch 189/300\n",
            "27/27 [==============================] - 21s 764ms/step - loss: 0.0396 - accuracy: 0.9494 - val_loss: 0.0277 - val_accuracy: 0.9650\n",
            "Epoch 190/300\n",
            "27/27 [==============================] - 21s 793ms/step - loss: 0.0385 - accuracy: 0.9505 - val_loss: 0.0280 - val_accuracy: 0.9650\n",
            "Epoch 191/300\n",
            "27/27 [==============================] - 21s 778ms/step - loss: 0.0367 - accuracy: 0.9511 - val_loss: 0.0274 - val_accuracy: 0.9623\n",
            "Epoch 192/300\n",
            "27/27 [==============================] - 21s 788ms/step - loss: 0.0398 - accuracy: 0.9488 - val_loss: 0.0294 - val_accuracy: 0.9637\n",
            "Epoch 193/300\n",
            "27/27 [==============================] - 20s 758ms/step - loss: 0.0387 - accuracy: 0.9484 - val_loss: 0.0304 - val_accuracy: 0.9569\n",
            "Epoch 194/300\n",
            "27/27 [==============================] - 21s 779ms/step - loss: 0.0383 - accuracy: 0.9473 - val_loss: 0.0267 - val_accuracy: 0.9637\n",
            "Epoch 195/300\n",
            "27/27 [==============================] - 21s 772ms/step - loss: 0.0371 - accuracy: 0.9511 - val_loss: 0.0269 - val_accuracy: 0.9596\n",
            "Epoch 196/300\n",
            "27/27 [==============================] - 21s 790ms/step - loss: 0.0405 - accuracy: 0.9493 - val_loss: 0.0305 - val_accuracy: 0.9569\n",
            "Epoch 197/300\n",
            "27/27 [==============================] - 20s 743ms/step - loss: 0.0500 - accuracy: 0.9322 - val_loss: 0.0275 - val_accuracy: 0.9583\n",
            "Epoch 198/300\n",
            "27/27 [==============================] - 20s 733ms/step - loss: 0.0402 - accuracy: 0.9478 - val_loss: 0.0261 - val_accuracy: 0.9650\n",
            "Epoch 199/300\n",
            "27/27 [==============================] - 22s 810ms/step - loss: 0.0369 - accuracy: 0.9523 - val_loss: 0.0257 - val_accuracy: 0.9690\n",
            "Epoch 200/300\n",
            "27/27 [==============================] - 20s 747ms/step - loss: 0.0392 - accuracy: 0.9461 - val_loss: 0.0287 - val_accuracy: 0.9690\n",
            "Epoch 201/300\n",
            "27/27 [==============================] - 21s 768ms/step - loss: 0.0368 - accuracy: 0.9524 - val_loss: 0.0268 - val_accuracy: 0.9623\n",
            "Epoch 202/300\n",
            "27/27 [==============================] - 20s 733ms/step - loss: 0.0348 - accuracy: 0.9544 - val_loss: 0.0249 - val_accuracy: 0.9704\n",
            "Epoch 203/300\n",
            "27/27 [==============================] - 21s 764ms/step - loss: 0.0383 - accuracy: 0.9488 - val_loss: 0.0252 - val_accuracy: 0.9677\n",
            "Epoch 204/300\n",
            "27/27 [==============================] - 20s 750ms/step - loss: 0.0362 - accuracy: 0.9533 - val_loss: 0.0260 - val_accuracy: 0.9596\n",
            "Epoch 205/300\n",
            "27/27 [==============================] - 20s 739ms/step - loss: 0.0392 - accuracy: 0.9467 - val_loss: 0.0247 - val_accuracy: 0.9650\n",
            "Epoch 206/300\n",
            "27/27 [==============================] - 20s 763ms/step - loss: 0.0364 - accuracy: 0.9521 - val_loss: 0.0258 - val_accuracy: 0.9637\n",
            "Epoch 207/300\n",
            "27/27 [==============================] - 21s 781ms/step - loss: 0.0372 - accuracy: 0.9493 - val_loss: 0.0234 - val_accuracy: 0.9704\n",
            "Epoch 208/300\n",
            "27/27 [==============================] - 21s 768ms/step - loss: 0.0358 - accuracy: 0.9518 - val_loss: 0.0266 - val_accuracy: 0.9637\n",
            "Epoch 209/300\n",
            "27/27 [==============================] - 20s 757ms/step - loss: 0.0361 - accuracy: 0.9526 - val_loss: 0.0231 - val_accuracy: 0.9717\n",
            "Epoch 210/300\n",
            "27/27 [==============================] - 20s 756ms/step - loss: 0.0416 - accuracy: 0.9463 - val_loss: 0.0266 - val_accuracy: 0.9637\n",
            "Epoch 211/300\n",
            "27/27 [==============================] - 22s 800ms/step - loss: 0.0421 - accuracy: 0.9431 - val_loss: 0.0250 - val_accuracy: 0.9704\n",
            "Epoch 212/300\n",
            "27/27 [==============================] - 22s 803ms/step - loss: 0.0382 - accuracy: 0.9493 - val_loss: 0.0229 - val_accuracy: 0.9744\n",
            "Epoch 213/300\n",
            "27/27 [==============================] - 21s 786ms/step - loss: 0.0366 - accuracy: 0.9529 - val_loss: 0.0245 - val_accuracy: 0.9664\n",
            "Epoch 214/300\n",
            "27/27 [==============================] - 20s 735ms/step - loss: 0.0410 - accuracy: 0.9467 - val_loss: 0.0229 - val_accuracy: 0.9704\n",
            "Epoch 215/300\n",
            "27/27 [==============================] - 19s 691ms/step - loss: 0.0378 - accuracy: 0.9512 - val_loss: 0.0261 - val_accuracy: 0.9637\n",
            "Epoch 216/300\n",
            "27/27 [==============================] - 18s 669ms/step - loss: 0.0360 - accuracy: 0.9527 - val_loss: 0.0237 - val_accuracy: 0.9677\n",
            "Epoch 217/300\n",
            "27/27 [==============================] - 19s 712ms/step - loss: 0.0372 - accuracy: 0.9506 - val_loss: 0.0224 - val_accuracy: 0.9704\n",
            "Epoch 218/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0375 - accuracy: 0.9472 - val_loss: 0.0251 - val_accuracy: 0.9717\n",
            "Epoch 219/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0375 - accuracy: 0.9476 - val_loss: 0.0234 - val_accuracy: 0.9623\n",
            "Epoch 220/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0363 - accuracy: 0.9517 - val_loss: 0.0252 - val_accuracy: 0.9623\n",
            "Epoch 221/300\n",
            "27/27 [==============================] - 19s 718ms/step - loss: 0.0380 - accuracy: 0.9502 - val_loss: 0.0243 - val_accuracy: 0.9664\n",
            "Epoch 222/300\n",
            "27/27 [==============================] - 19s 700ms/step - loss: 0.0359 - accuracy: 0.9529 - val_loss: 0.0250 - val_accuracy: 0.9650\n",
            "Epoch 223/300\n",
            "27/27 [==============================] - 18s 685ms/step - loss: 0.0359 - accuracy: 0.9533 - val_loss: 0.0257 - val_accuracy: 0.9623\n",
            "Epoch 224/300\n",
            "27/27 [==============================] - 19s 704ms/step - loss: 0.0375 - accuracy: 0.9482 - val_loss: 0.0236 - val_accuracy: 0.9717\n",
            "Epoch 225/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0380 - accuracy: 0.9493 - val_loss: 0.0229 - val_accuracy: 0.9664\n",
            "Epoch 226/300\n",
            "27/27 [==============================] - 20s 728ms/step - loss: 0.0363 - accuracy: 0.9553 - val_loss: 0.0246 - val_accuracy: 0.9677\n",
            "Epoch 227/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0355 - accuracy: 0.9518 - val_loss: 0.0225 - val_accuracy: 0.9731\n",
            "Epoch 228/300\n",
            "27/27 [==============================] - 19s 719ms/step - loss: 0.0346 - accuracy: 0.9551 - val_loss: 0.0235 - val_accuracy: 0.9690\n",
            "Epoch 229/300\n",
            "27/27 [==============================] - 19s 699ms/step - loss: 0.0383 - accuracy: 0.9497 - val_loss: 0.0226 - val_accuracy: 0.9717\n",
            "Epoch 230/300\n",
            "27/27 [==============================] - 19s 691ms/step - loss: 0.0358 - accuracy: 0.9511 - val_loss: 0.0237 - val_accuracy: 0.9717\n",
            "Epoch 231/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0368 - accuracy: 0.9512 - val_loss: 0.0245 - val_accuracy: 0.9717\n",
            "Epoch 232/300\n",
            "27/27 [==============================] - 19s 697ms/step - loss: 0.0350 - accuracy: 0.9536 - val_loss: 0.0223 - val_accuracy: 0.9731\n",
            "Epoch 233/300\n",
            "27/27 [==============================] - 18s 672ms/step - loss: 0.0355 - accuracy: 0.9533 - val_loss: 0.0228 - val_accuracy: 0.9744\n",
            "Epoch 234/300\n",
            "27/27 [==============================] - 20s 728ms/step - loss: 0.0371 - accuracy: 0.9511 - val_loss: 0.0232 - val_accuracy: 0.9731\n",
            "Epoch 235/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0411 - accuracy: 0.9461 - val_loss: 0.0212 - val_accuracy: 0.9744\n",
            "Epoch 236/300\n",
            "27/27 [==============================] - 18s 666ms/step - loss: 0.0362 - accuracy: 0.9511 - val_loss: 0.0228 - val_accuracy: 0.9717\n",
            "Epoch 237/300\n",
            "27/27 [==============================] - 19s 715ms/step - loss: 0.0378 - accuracy: 0.9508 - val_loss: 0.0248 - val_accuracy: 0.9690\n",
            "Epoch 238/300\n",
            "27/27 [==============================] - 18s 685ms/step - loss: 0.0385 - accuracy: 0.9482 - val_loss: 0.0234 - val_accuracy: 0.9731\n",
            "Epoch 239/300\n",
            "27/27 [==============================] - 19s 707ms/step - loss: 0.0388 - accuracy: 0.9502 - val_loss: 0.0238 - val_accuracy: 0.9717\n",
            "Epoch 240/300\n",
            "27/27 [==============================] - 20s 742ms/step - loss: 0.0366 - accuracy: 0.9524 - val_loss: 0.0250 - val_accuracy: 0.9650\n",
            "Epoch 241/300\n",
            "27/27 [==============================] - 18s 670ms/step - loss: 0.0393 - accuracy: 0.9460 - val_loss: 0.0244 - val_accuracy: 0.9690\n",
            "Epoch 242/300\n",
            "27/27 [==============================] - 19s 726ms/step - loss: 0.0387 - accuracy: 0.9487 - val_loss: 0.0223 - val_accuracy: 0.9744\n",
            "Epoch 243/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0354 - accuracy: 0.9539 - val_loss: 0.0214 - val_accuracy: 0.9771\n",
            "Epoch 244/300\n",
            "27/27 [==============================] - 19s 709ms/step - loss: 0.0349 - accuracy: 0.9544 - val_loss: 0.0227 - val_accuracy: 0.9690\n",
            "Epoch 245/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0332 - accuracy: 0.9569 - val_loss: 0.0247 - val_accuracy: 0.9744\n",
            "Epoch 246/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0373 - accuracy: 0.9511 - val_loss: 0.0243 - val_accuracy: 0.9717\n",
            "Epoch 247/300\n",
            "27/27 [==============================] - 18s 658ms/step - loss: 0.0335 - accuracy: 0.9572 - val_loss: 0.0227 - val_accuracy: 0.9717\n",
            "Epoch 248/300\n",
            "27/27 [==============================] - 19s 714ms/step - loss: 0.0379 - accuracy: 0.9500 - val_loss: 0.0251 - val_accuracy: 0.9677\n",
            "Epoch 249/300\n",
            "27/27 [==============================] - 18s 675ms/step - loss: 0.0358 - accuracy: 0.9518 - val_loss: 0.0259 - val_accuracy: 0.9650\n",
            "Epoch 250/300\n",
            "27/27 [==============================] - 19s 685ms/step - loss: 0.0344 - accuracy: 0.9563 - val_loss: 0.0215 - val_accuracy: 0.9690\n",
            "Epoch 251/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0358 - accuracy: 0.9526 - val_loss: 0.0225 - val_accuracy: 0.9744\n",
            "Epoch 252/300\n",
            "27/27 [==============================] - 18s 670ms/step - loss: 0.0376 - accuracy: 0.9524 - val_loss: 0.0265 - val_accuracy: 0.9583\n",
            "Epoch 253/300\n",
            "27/27 [==============================] - 19s 712ms/step - loss: 0.0366 - accuracy: 0.9505 - val_loss: 0.0250 - val_accuracy: 0.9637\n",
            "Epoch 254/300\n",
            "27/27 [==============================] - 19s 689ms/step - loss: 0.0374 - accuracy: 0.9529 - val_loss: 0.0223 - val_accuracy: 0.9704\n",
            "Epoch 255/300\n",
            "27/27 [==============================] - 19s 690ms/step - loss: 0.0395 - accuracy: 0.9464 - val_loss: 0.0240 - val_accuracy: 0.9637\n",
            "Epoch 256/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.0368 - accuracy: 0.9502 - val_loss: 0.0223 - val_accuracy: 0.9690\n",
            "Epoch 257/300\n",
            "27/27 [==============================] - 19s 708ms/step - loss: 0.0344 - accuracy: 0.9524 - val_loss: 0.0228 - val_accuracy: 0.9744\n",
            "Epoch 258/300\n",
            "27/27 [==============================] - 20s 716ms/step - loss: 0.0343 - accuracy: 0.9563 - val_loss: 0.0275 - val_accuracy: 0.9623\n",
            "Epoch 259/300\n",
            "27/27 [==============================] - 19s 720ms/step - loss: 0.0357 - accuracy: 0.9512 - val_loss: 0.0218 - val_accuracy: 0.9704\n",
            "Epoch 260/300\n",
            "27/27 [==============================] - 18s 660ms/step - loss: 0.0351 - accuracy: 0.9548 - val_loss: 0.0232 - val_accuracy: 0.9637\n",
            "Epoch 261/300\n",
            "27/27 [==============================] - 18s 684ms/step - loss: 0.0344 - accuracy: 0.9542 - val_loss: 0.0235 - val_accuracy: 0.9637\n",
            "Epoch 262/300\n",
            "27/27 [==============================] - 19s 712ms/step - loss: 0.0337 - accuracy: 0.9556 - val_loss: 0.0233 - val_accuracy: 0.9731\n",
            "Epoch 263/300\n",
            "27/27 [==============================] - 19s 719ms/step - loss: 0.0353 - accuracy: 0.9535 - val_loss: 0.0237 - val_accuracy: 0.9690\n",
            "Epoch 264/300\n",
            "27/27 [==============================] - 18s 667ms/step - loss: 0.0364 - accuracy: 0.9494 - val_loss: 0.0209 - val_accuracy: 0.9731\n",
            "Epoch 265/300\n",
            "27/27 [==============================] - 18s 681ms/step - loss: 0.0376 - accuracy: 0.9484 - val_loss: 0.0230 - val_accuracy: 0.9704\n",
            "Epoch 266/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0353 - accuracy: 0.9535 - val_loss: 0.0215 - val_accuracy: 0.9731\n",
            "Epoch 267/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.0327 - accuracy: 0.9565 - val_loss: 0.0222 - val_accuracy: 0.9677\n",
            "Epoch 268/300\n",
            "27/27 [==============================] - 19s 692ms/step - loss: 0.0374 - accuracy: 0.9511 - val_loss: 0.0249 - val_accuracy: 0.9677\n",
            "Epoch 269/300\n",
            "27/27 [==============================] - 18s 667ms/step - loss: 0.0378 - accuracy: 0.9508 - val_loss: 0.0230 - val_accuracy: 0.9758\n",
            "Epoch 270/300\n",
            "27/27 [==============================] - 19s 704ms/step - loss: 0.0330 - accuracy: 0.9556 - val_loss: 0.0216 - val_accuracy: 0.9731\n",
            "Epoch 271/300\n",
            "27/27 [==============================] - 19s 687ms/step - loss: 0.0347 - accuracy: 0.9553 - val_loss: 0.0211 - val_accuracy: 0.9717\n",
            "Epoch 272/300\n",
            "27/27 [==============================] - 19s 717ms/step - loss: 0.0329 - accuracy: 0.9566 - val_loss: 0.0206 - val_accuracy: 0.9731\n",
            "Epoch 273/300\n",
            "27/27 [==============================] - 18s 678ms/step - loss: 0.0349 - accuracy: 0.9538 - val_loss: 0.0230 - val_accuracy: 0.9690\n",
            "Epoch 274/300\n",
            "27/27 [==============================] - 19s 699ms/step - loss: 0.0342 - accuracy: 0.9566 - val_loss: 0.0204 - val_accuracy: 0.9744\n",
            "Epoch 275/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0321 - accuracy: 0.9574 - val_loss: 0.0211 - val_accuracy: 0.9677\n",
            "Epoch 276/300\n",
            "27/27 [==============================] - 18s 676ms/step - loss: 0.0334 - accuracy: 0.9565 - val_loss: 0.0224 - val_accuracy: 0.9704\n",
            "Epoch 277/300\n",
            "27/27 [==============================] - 19s 718ms/step - loss: 0.0333 - accuracy: 0.9563 - val_loss: 0.0216 - val_accuracy: 0.9704\n",
            "Epoch 278/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0333 - accuracy: 0.9554 - val_loss: 0.0209 - val_accuracy: 0.9704\n",
            "Epoch 279/300\n",
            "27/27 [==============================] - 19s 676ms/step - loss: 0.0331 - accuracy: 0.9565 - val_loss: 0.0217 - val_accuracy: 0.9704\n",
            "Epoch 280/300\n",
            "27/27 [==============================] - 19s 723ms/step - loss: 0.0352 - accuracy: 0.9556 - val_loss: 0.0229 - val_accuracy: 0.9690\n",
            "Epoch 281/300\n",
            "27/27 [==============================] - 20s 724ms/step - loss: 0.0339 - accuracy: 0.9569 - val_loss: 0.0226 - val_accuracy: 0.9731\n",
            "Epoch 282/300\n",
            "27/27 [==============================] - 19s 698ms/step - loss: 0.0335 - accuracy: 0.9566 - val_loss: 0.0227 - val_accuracy: 0.9717\n",
            "Epoch 283/300\n",
            "27/27 [==============================] - 19s 691ms/step - loss: 0.0333 - accuracy: 0.9578 - val_loss: 0.0208 - val_accuracy: 0.9704\n",
            "Epoch 284/300\n",
            "27/27 [==============================] - 18s 685ms/step - loss: 0.0334 - accuracy: 0.9560 - val_loss: 0.0241 - val_accuracy: 0.9637\n",
            "Epoch 285/300\n",
            "27/27 [==============================] - 18s 681ms/step - loss: 0.0346 - accuracy: 0.9533 - val_loss: 0.0258 - val_accuracy: 0.9677\n",
            "Epoch 286/300\n",
            "27/27 [==============================] - 18s 663ms/step - loss: 0.0345 - accuracy: 0.9547 - val_loss: 0.0221 - val_accuracy: 0.9690\n",
            "Epoch 287/300\n",
            "27/27 [==============================] - 19s 688ms/step - loss: 0.0349 - accuracy: 0.9568 - val_loss: 0.0256 - val_accuracy: 0.9623\n",
            "Epoch 288/300\n",
            "27/27 [==============================] - 18s 667ms/step - loss: 0.0330 - accuracy: 0.9577 - val_loss: 0.0217 - val_accuracy: 0.9717\n",
            "Epoch 289/300\n",
            "27/27 [==============================] - 19s 700ms/step - loss: 0.0316 - accuracy: 0.9581 - val_loss: 0.0230 - val_accuracy: 0.9690\n",
            "Epoch 290/300\n",
            "27/27 [==============================] - 20s 741ms/step - loss: 0.0342 - accuracy: 0.9542 - val_loss: 0.0210 - val_accuracy: 0.9758\n",
            "Epoch 291/300\n",
            "27/27 [==============================] - 19s 701ms/step - loss: 0.0333 - accuracy: 0.9563 - val_loss: 0.0231 - val_accuracy: 0.9704\n",
            "Epoch 292/300\n",
            "27/27 [==============================] - 19s 702ms/step - loss: 0.0340 - accuracy: 0.9571 - val_loss: 0.0219 - val_accuracy: 0.9717\n",
            "Epoch 293/300\n",
            "27/27 [==============================] - 19s 696ms/step - loss: 0.0338 - accuracy: 0.9559 - val_loss: 0.0227 - val_accuracy: 0.9664\n",
            "Epoch 294/300\n",
            "27/27 [==============================] - 19s 678ms/step - loss: 0.0322 - accuracy: 0.9584 - val_loss: 0.0211 - val_accuracy: 0.9690\n",
            "Epoch 295/300\n",
            "27/27 [==============================] - 19s 721ms/step - loss: 0.0324 - accuracy: 0.9568 - val_loss: 0.0235 - val_accuracy: 0.9664\n",
            "Epoch 296/300\n",
            "27/27 [==============================] - 19s 707ms/step - loss: 0.0343 - accuracy: 0.9565 - val_loss: 0.0224 - val_accuracy: 0.9731\n",
            "Epoch 297/300\n",
            "27/27 [==============================] - 19s 715ms/step - loss: 0.0310 - accuracy: 0.9607 - val_loss: 0.0218 - val_accuracy: 0.9717\n",
            "Epoch 298/300\n",
            "27/27 [==============================] - 19s 710ms/step - loss: 0.0342 - accuracy: 0.9550 - val_loss: 0.0208 - val_accuracy: 0.9758\n",
            "Epoch 299/300\n",
            "27/27 [==============================] - 19s 718ms/step - loss: 0.0301 - accuracy: 0.9611 - val_loss: 0.0201 - val_accuracy: 0.9771\n",
            "Epoch 300/300\n",
            "27/27 [==============================] - 19s 703ms/step - loss: 0.0336 - accuracy: 0.9554 - val_loss: 0.0208 - val_accuracy: 0.9690\n"
          ]
        }
      ],
      "source": [
        "# Some code is taken from:\n",
        "# https://www.kaggle.com/ashusma/training-rfcx-tensorflow-tpu-effnet-b2.\n",
        "class WarmUpCosine(keras.optimizers.schedules.LearningRateSchedule):\n",
        "    def __init__(\n",
        "        self, learning_rate_base, total_steps, warmup_learning_rate, warmup_steps\n",
        "    ):\n",
        "        super(WarmUpCosine, self).__init__()\n",
        "\n",
        "        self.learning_rate_base = learning_rate_base\n",
        "        self.total_steps = total_steps\n",
        "        self.warmup_learning_rate = warmup_learning_rate\n",
        "        self.warmup_steps = warmup_steps\n",
        "        self.pi = tf.constant(np.pi)\n",
        "\n",
        "    def __call__(self, step):\n",
        "        if self.total_steps < self.warmup_steps:\n",
        "            raise ValueError(\"Total_steps must be larger or equal to warmup_steps.\")\n",
        "\n",
        "        cos_annealed_lr = tf.cos(\n",
        "            self.pi\n",
        "            * (tf.cast(step, tf.float32) - self.warmup_steps)\n",
        "            / float(self.total_steps - self.warmup_steps)\n",
        "        )\n",
        "        learning_rate = 0.5 * self.learning_rate_base * (1 + cos_annealed_lr)\n",
        "\n",
        "        if self.warmup_steps > 0:\n",
        "            if self.learning_rate_base < self.warmup_learning_rate:\n",
        "                raise ValueError(\n",
        "                    \"Learning_rate_base must be larger or equal to \"\n",
        "                    \"warmup_learning_rate.\"\n",
        "                )\n",
        "            slope = (\n",
        "                self.learning_rate_base - self.warmup_learning_rate\n",
        "            ) / self.warmup_steps\n",
        "            warmup_rate = slope * tf.cast(step, tf.float32) + self.warmup_learning_rate\n",
        "            learning_rate = tf.where(\n",
        "                step < self.warmup_steps, warmup_rate, learning_rate\n",
        "            )\n",
        "        return tf.where(\n",
        "            step > self.total_steps, 0.0, learning_rate, name=\"learning_rate\"\n",
        "        )\n",
        "\n",
        "\n",
        "def run_experiment(model):\n",
        "    total_steps = int((len(train_x) / BATCH_SIZE) * EPOCHS)\n",
        "    warmup_epoch_percentage = 0.10\n",
        "    warmup_steps = int(total_steps * warmup_epoch_percentage)\n",
        "    scheduled_lrs = WarmUpCosine(\n",
        "        learning_rate_base=LEARNING_RATE,\n",
        "        total_steps=total_steps,\n",
        "        warmup_learning_rate=0.001,\n",
        "        warmup_steps=warmup_steps,\n",
        "    )\n",
        "\n",
        "    optimizer = tfa.optimizers.AdamW(\n",
        "        learning_rate=LEARNING_RATE, weight_decay=WEIGHT_DECAY\n",
        "    )    \n",
        "    model.compile(\n",
        "        optimizer=optimizer,\n",
        "        #loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True)\n",
        "        #loss= tf.keras.losses.CategoricalCrossentropy(from_logits=True)\n",
        "        #loss=tf.keras.losses.Huber()\n",
        "        loss=tf.keras.losses.MeanSquaredError(),\n",
        "        metrics=['accuracy']\n",
        "            #keras.metrics.SparseCategoricalAccuracy(name=\"accuracy\")\n",
        "            #tf.keras.metrics.CategoricalAccuracy(h),\n",
        "            #keras.metrics.SparseTopKCategoricalAccuracy(5, name=\"top-5-accuracy\"),\n",
        "     #   ]\n",
        "    )\n",
        "\n",
        "    history = model.fit(\n",
        "        x=train_x,\n",
        "        y=train_y,\n",
        "        batch_size=BATCH_SIZE,\n",
        "        epochs=300,\n",
        "        validation_split=0.1,\n",
        "    )\n",
        "#     _, accuracy, top_5_accuracy = model.evaluate(x_test, y_test, batch_size=BATCH_SIZE)\n",
        "#     print(f\"Test accuracy: {round(accuracy * 100, 2)}%\")\n",
        "#     print(f\"Test top 5 accuracy: {round(top_5_accuracy * 100, 2)}%\")\n",
        "\n",
        "    return history\n",
        "\n",
        "\n",
        "# Run experiments with the vanilla ViT\n",
        "vit = create_vit_classifier(vanilla=True)\n",
        "history = run_experiment(vit)\n",
        "\n",
        "# Run experiments with the Shifted Patch Tokenization and\n",
        "# Locality Self Attention modified ViT\n",
        "#vit_sl = create_vit_classifier(vanilla=False)\n",
        "#history = run_experiment(vit_sl)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9505f6ac",
      "metadata": {
        "id": "9505f6ac",
        "outputId": "e667e97f-e0f5-4494-9c6a-bb19f3294b35"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2880x576 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "epochs = [i for i in range(300)]\n",
        "fig , ax = plt.subplots(1,2)\n",
        "train_acc = history.history['accuracy']\n",
        "train_loss = history.history['loss']\n",
        "val_acc = history.history['val_accuracy']\n",
        "val_loss = history.history['val_loss']\n",
        "fig.set_size_inches(40,8)\n",
        "\n",
        "ax[0].plot(epochs , train_acc , 'go-' , label = 'Training Accuracy')\n",
        "ax[0].plot(epochs , val_acc , 'ro-' , label = 'Validation Accuracy')\n",
        "ax[0].set_title('Training & Validation Accuracy')\n",
        "ax[0].legend()\n",
        "ax[0].set_xlabel(\"Epochs\")\n",
        "ax[0].set_ylabel(\"Accuracy\")\n",
        "\n",
        "ax[1].plot(epochs , train_loss , 'g-o' , label = 'Training Loss')\n",
        "ax[1].plot(epochs , val_loss , 'r-o' , label = 'Validation Loss')\n",
        "ax[1].set_title('Testing Accuracy & Loss')\n",
        "ax[1].legend()\n",
        "ax[1].set_xlabel(\"Epochs\")\n",
        "ax[1].set_ylabel(\"Training & Validation Loss\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c59c1568",
      "metadata": {
        "id": "c59c1568"
      },
      "outputs": [],
      "source": [
        "y_pred=vit.predict(test_x)\n",
        "y_pred=np.argmax(y_pred, axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1f57d51a",
      "metadata": {
        "id": "1f57d51a",
        "outputId": "29d87a7c-71d9-4aa8-92e8-78c810930811"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]],\n",
              "\n",
              "\n",
              "       [[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]],\n",
              "\n",
              "\n",
              "       [[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]],\n",
              "\n",
              "\n",
              "       ...,\n",
              "\n",
              "\n",
              "       [[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]],\n",
              "\n",
              "\n",
              "       [[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]],\n",
              "\n",
              "\n",
              "       [[[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]],\n",
              "\n",
              "        [[0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         ...,\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0],\n",
              "         [0, 0, 0]]]], dtype=uint8)"
            ]
          },
          "execution_count": 118,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test_y=np.argmax(test_y, axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "23472ae2",
      "metadata": {
        "id": "23472ae2",
        "outputId": "79419ea3-975e-42f3-cd5e-c599210b7549"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[1161   14]\n",
            " [  73  609]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.94      0.99      0.96      1175\n",
            "           1       0.98      0.89      0.93       682\n",
            "\n",
            "    accuracy                           0.95      1857\n",
            "   macro avg       0.96      0.94      0.95      1857\n",
            "weighted avg       0.95      0.95      0.95      1857\n",
            "\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "print(confusion_matrix(test_y,y_pred))\n",
        "print(classification_report(test_y,y_pred))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8409be51",
      "metadata": {
        "id": "8409be51",
        "outputId": "2fb448df-ef37-44b7-ac7f-978263a3c485"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Confusion Matrix')"
            ]
          },
          "execution_count": 120,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cm_LR=confusion_matrix(test_y, y_pred)\n",
        "cmd = ConfusionMatrixDisplay(cm_LR, display_labels=['Normal' ,'Stone'])\n",
        "cmd.plot()\n",
        "plt.title('Confusion Matrix')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "01b85a9d",
      "metadata": {
        "id": "01b85a9d",
        "outputId": "72e07ff9-775f-4e70-fc24-365499226980"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<function create_vit_classifier at 0x00000177D81D29D0>\n"
          ]
        }
      ],
      "source": [
        "print(create_vit_classifier)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "07a7fb6a",
      "metadata": {
        "id": "07a7fb6a"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}